# Train Model

model.fit([padded_arabic_lines, padded_english_lines], decoder_output_data, batch_size=64, epochs=20 , validation_splite=0.10)

model.save('model.h5')


def make_reference_models():
    encoder_model_reference = k.models.Model(encoder_inputs, encoder_state)

    decoder_state_h = k.layers.Input(shape(128, ))
    decoder_state_c = k.layers.Input(shape(128, ))
    decoder_inputs_state = [decoder_state_h, decoder_state_c]
    decoder_outputs, state_h, state_c = decoder_lstm(decoder_embedding, initial_state=decoder_inputs_state)
    decoder_states = [state_h, state_c]
    decoder_outputs = decoder_dense(decoder_outputs)
    decoder_model_reference = k.models.Model([decoder_inputs] + decoder_inputs_state,
                                             [decoder_outputs] + decoder_states)

    return encoder_model_reference, decoder_model_reference

    # decoder_model_reference =

